<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:http="http://www.springframework.org/schema/c"
        xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">


    <!--Dao层配置-->
    <!-- 扫描包类，将标注Spring注解的类自动转化为Bean，同时完成Bean的注入-->
    <context:component-scan base-package="com.smart.dao"/>
    <!--定义一个使用DBCP实现的数据源-->
    <context:property-placeholder location="/jdbc.properties"/>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"-->
    <!--destroy-method="close">-->
    <!--<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
    <!--<property name="url" value="jdbc:mysql://localhost:3306/sampledb"/>-->
    <!--<property name="username" value="root"/>-->
    <!--<property name="password" value="940925"/>-->
    <!--</bean>-->
    <!--定义JDBC模板Bean-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"/>


    <!--service层配置-->
    <!-- 扫描包类，将标注Spring注解的类自动转化为Bean，同时完成Bean的注入-->
    <context:component-scan base-package="com.smart.service"/>
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>
    <!--通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务-->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethod"
                      expression="(execution(* com.smart.service..*(..))) and (@annotation(org.springframework.transaction.annotation.Transactional))"/>
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!--dubbo配置-->
    <!-- 发布dubbo服务 -->
    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="eshop-manager"/>
    <!-- 注册中心的地址 -->
    <!--这里因为我的zookeeper注册在本机，所以ip地址是这个，大家根据自己的不同修改-->
    <dubbo:registry protocol="zookeeper" address="127.0.0.1:2181"/>
    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="20880"/>
    <!-- 声明需要暴露的服务接口 -->
    <dubbo:service interface="com.smart.service.UserService"
                   ref="userServiceImpl"/>

    <!--补充说明：-->
    <!--1. dubbo:registry 标签一些属性的说明：-->
    <!--         register是否向此注册中心注册服务，如果设为false，将只订阅，不注册。-->
    <!--         check注册中心不存在时，是否报错。-->
    <!--         subscribe是否向此注册中心订阅服务，如果设为false，将只注册，不订阅。-->
    <!--         timeout注册中心请求超时时间(毫秒)。-->
    <!--         address可以Zookeeper集群配置，地址可以多个以逗号隔开等。-->
    <!--2. dubbo:service标签的一些属性说明：-->
    <!--         interface服务接口的路径-->
    <!--         ref引用对应的实现类的Bean的ID-->
    <!--         registry向指定注册中心注册，在多个注册中心时使用，值为的id属性，多个注册中心ID用逗号分隔，如果不想将该服务注册到任何registry，可将值设为N/A-->
    <!--         register 默认true ，该协议的服务是否注册到注册中心。-->



</beans>