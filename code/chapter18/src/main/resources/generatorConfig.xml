<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--导入属性配置-->
    <properties resource="jdbc.properties"></properties>

    <context id="MyAqlContext" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <!-- defaultModelType设置为flat，目的是使每个表只生成一个实体类，当没有复杂的类继承时使用方便 -->
        <!-- 因为这里是MySql，因此前后分隔符设置为"`" -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 注释生成器  配置生成数据库的注释信息 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>

        <jdbcConnection driverClass="${jdbc.driverClassName}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.username}"
                        password="${jdbc.password}">
        </jdbcConnection>

        <javaModelGenerator targetPackage="test.model" targetProject="src\main\java">
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 配置生成的Mapper.xml文件的位置 -->
        <sqlMapGenerator targetPackage="test.xml" targetProject="src\main\resources"/>

        <!-- 配置生成的Mapper接口的位置 -->
        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator targetPackage="test.dao"
                             targetProject="src\main\java"
                             type="XMLMAPPER"/>

        <!-- 使用通配符%匹配所有表 -->
        <table tableName="%">
            <generatedKey column="id" sqlStatement="MySql"/>
        </table>
    </context>
</generatorConfiguration>